# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=storyarchive

matrix:
  include:
    # Android
    # TODO: Figure out how to get PostgreSQL and SQLite on Android and iOS
    # - env: TARGET=aarch64-linux-android DISABLE_TESTS=1
    #   rust: nightly
    # - env: TARGET=arm-linux-androideabi DISABLE_TESTS=1
    #   rust: nightly
    # - env: TARGET=armv7-linux-androideabi DISABLE_TESTS=1
    #   rust: nightly
    # - env: TARGET=i686-linux-android DISABLE_TESTS=1
    #   rust: nightly
    # - env: TARGET=x86_64-linux-android DISABLE_TESTS=1
    #   rust: nightly

    # iOS
    # - env: TARGET=aarch64-apple-ios DISABLE_TESTS=1
    #   rust: nightly
    #   os: osx
    # - env: TARGET=armv7-apple-ios DISABLE_TESTS=1
    #   rust: nightly
    #   os: osx
    # - env: TARGET=armv7s-apple-ios DISABLE_TESTS=1
    #   rust: nightly
    #   os: osx
    # - env: TARGET=i386-apple-ios DISABLE_TESTS=1
    #   rust: nightly
    #   os: osx
    # - env: TARGET=x86_64-apple-ios DISABLE_TESTS=1
    #   rust: nightly
    #   os: osx

    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=arm-unknown-linux-gnueabi
      rust: nightly
    - env: TARGET=armv7-unknown-linux-gnueabihf
      rust: nightly
    - env: TARGET=i686-unknown-linux-gnu
      rust: nightly
    - env: TARGET=i686-unknown-linux-musl
      rust: nightly
    - env: TARGET=mips-unknown-linux-gnu
      rust: nightly
    - env: TARGET=mips64-unknown-linux-gnuabi64
      rust: nightly
    - env: TARGET=mips64el-unknown-linux-gnuabi64
      rust: nightly
    - env: TARGET=mipsel-unknown-linux-gnu
      rust: nightly
    - env: TARGET=powerpc-unknown-linux-gnu
      rust: nightly
    - env: TARGET=powerpc64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=powerpc64le-unknown-linux-gnu
      rust: nightly
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
      rust: nightly
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-unknown-linux-musl
      rust: nightly

    # OSX
    - env: TARGET=i686-apple-darwin
      rust: nightly
      os: osx
    - env: TARGET=x86_64-apple-darwin
      rust: nightly
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
      rust: nightly
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
      rust: nightly
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1
      rust: nightly

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu
      rust: nightly

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

before_install:
  - set -e
  - sudo apt-get install automake libtool g++
  - git clone https://github.com/sass/libsass.git
  - cd libsass
  - autoreconf --force --install
  - ./configure --disable-tests --disable-static --enable-shared --prefix=/usr
  - sudo make -j5 install
  - cd ..
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  api_key:
    secure: "fLSXGn6fEzAC5fBBXGqFHrGrjhmB0k7M3KG8RfhLuMUzdB4XdHZakpx4X8czQ/VQH2hRQa+mn52JyGBdL3liuqeRlHp6T+xKeE83Y/36eLq+GOHCrxmM/tbSwjRFmY9+hyxScHlNkal3XSpcZNq1UoaYKKDiSrsDuDi19TeZzD5JH+jPzxhokA5/O7PQhntWX/qsrg7DI04bnhmO85DLjRhENRwYCml3aOb22VWxGVGkEa6kx68IIvJ82ukx/UaAZXaUC5UtlWBCDR6CsHVUphaqvyTo2XVJXT6+RRZCq92/60NpwuP3g7cgOk9emlpOk8wEEV+8HLIGnQrPYjfq+ow10wXT9ratjt/S6PlFvlAJQjVYWPhSkrgkqq9HWKXDBz9djSqfBRHUKgx/5koQI2jMJhgdrGbScGEjNduaucrDou/lYTQntO5/cPQlIcWT1oLYuI2ao5gp4GDe851v3FdRq0AIhRBwDuQj/L4bfRafKHNM5fC3pKRnC8cxMOshle4HNbfpUtjghBx1IY/vux/ed6arLve6PnV6+BPwSgHox7kDsfgDbJKSPSuDbIikMub4V0TTVKxKgB3N1NAiA3NV4g2GqWW6TREU0FynPcDhYMnL9euBKiAC1LGEJ/wgsMqHpKthu126mazDtlAM0W0fuxYLIa7sLJiR45DnP6U="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    condition: $TRAVIS_RUST_VERSION = nightly
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # dev
    - /^dev-\d+\.\d+(\.\d+)?(-\S*)?$/
    # stable
    - /^stable-\d+\.\d+(\.\d+)?(-\S*)?$/
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
